#File: ObstacleAvoidance.fll
Engine: ObstacleAvoidance
InputVariable: ScreenLS
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: nothing Trapezoid 0.000 0.000 0.100 0.250
  term: small Triangle 0.100 0.200 0.300
  term: medium Trapezoid 0.200 0.300 0.600 0.750
  term: large Trapezoid 0.500 0.800 1.000 1.000
InputVariable: ScreenLD
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: close Trapezoid 0.000 0.000 0.150 0.300
  term: medium Trapezoid 0.200 0.300 0.400 0.500
  term: far Trapezoid 0.400 0.550 1.000 1.000

InputVariable: ScreenMS
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: nothing Trapezoid 0.000 0.000 0.100 0.200
  term: small Triangle 0.100 0.200 0.300
  term: medium Trapezoid 0.200 0.300 0.600 0.750
  term: large Trapezoid 0.500 0.800 1.000 1.000
InputVariable: ScreenMD
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: close Trapezoid 0.000 0.000 0.150 0.300
  term: medium Trapezoid 0.200 0.300 0.400 0.500
  term: far Trapezoid 0.400 0.550 1.000 1.000

InputVariable: ScreenRS
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: nothing Trapezoid 0.000 0.000 0.100 0.200
  term: small Triangle 0.100 0.200 0.300
  term: medium Trapezoid 0.200 0.300 0.600 0.750
  term: large Trapezoid 0.500 0.800 1.000 1.000

InputVariable: ScreenRD
  enabled: true
  range: 0.000 1.000
  lock-range: false
  term: close Trapezoid 0.000 0.000 0.150 0.300
  term: medium Trapezoid 0.200 0.300 0.400 0.500
  term: far Trapezoid 0.400 0.550 1.000 1.000


OutputVariable: Roll
  enabled: true
  range: 0.000 1.000
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: 0.5
  lock-previous: false
  term: hardLeft Trapezoid 0.000 0.000 0.150 0.300
  term: left Triangle 0.200 0.350 0.500
  term: stay Trapezoid 0.300 0.450 0.550 0.700
  term: right Triangle 0.500 0.650 0.800
  term: hardRight Trapezoid 0.700 0.850 1.000 1.000

OutputVariable: Yaw
  enabled: true
  range: 0.000 1.000
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: 0
  lock-previous: false
  term: hardLeft Trapezoid 0.000 0.000 0.150 0.300
  term: left Triangle 0.200 0.350 0.500
  term: stay Trapezoid 0.300 0.450 0.550 0.700
  term: right Triangle 0.500 0.650 0.800
  term: hardRight Trapezoid 0.700 0.850 1.000 1.000

OutputVariable: Pitch
  enabled: true
  range: 0.000 1.000
  lock-range: false
  aggregation: Maximum
  defuzzifier: Centroid 100
  default: 0
  lock-previous: false
  term: stay Trapezoid 0.000 0.000 0.150 0.300
  term: reverse Triangle 0.250 0.500 0.750
  term: hardReverse Trapezoid 0.700 0.900 1.000 1.000

RuleBlock: mamdani
  enabled: true
  conjunction: AlgebraicProduct
  disjunction: none
  implication: AlgebraicProduct
  activation: General

  rule: if ScreenLD is close and ScreenLS is large then Pitch is hardReverse
  rule: if ScreenMD is close and ScreenMS is large then Pitch is hardReverse
  rule: if ScreenRD is close and ScreenRS is large then Pitch is hardReverse

  rule: if ScreenLD is close then Pitch is reverse
  rule: if ScreenMD is close then Pitch is reverse
  rule: if ScreenRD is close then Pitch is reverse

  rule: if ScreenLS is small then Pitch is stay
  rule: if ScreenMS is small then Pitch is stay
  rule: if ScreenRS is small then Pitch is stay

  rule: if ScreenLD is medium then Pitch is stay
  rule: if ScreenMD is medium then Pitch is stay
  rule: if ScreenRD is medium then Pitch is stay




  rule: if Screen LD is close then Roll is hardRight
  rule: if Screen LD is medium then Roll is right
  rule: if Screen LD is far then Roll is stay

  rule: if Screen RD is close then Roll is hardLeft
  rule: if Screen RD is medium then Roll is left
  rule: if Screen RD is far then Roll is stay

  #rule: if ScreenLS is large then Roll is right
  #rule: if ScreenRS is large then Roll is left

  

  #rule: if ScreenLS is nothing then Roll is stay
  #rule: if ScreenLS is small and ScreenLD is close then Roll is right
  #rule: if ScreenLS is medium and ScreenLD is medium then Roll is right
  #rule: if ScreenLS is large and ScreenLD is medium then Roll is right
  #rule: if ScreenLS is large and ScreenLD is close then Roll is hardRight

  #rule: if ScreenRS is nothing then Roll is stay
  #rule: if ScreenRS is small and ScreenRD is close then Roll is left
  #rule: if ScreenRS is medium and ScreenRD is medium then Roll is left
  #rule: if ScreenRS is large and ScreenRD is medium then Roll is left
  #rule: if ScreenRS is large and ScreenRD is close then Roll is hardLeft



  